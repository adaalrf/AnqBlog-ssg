@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  .light {
    /* set your color here for light-mode */
    --background-hue: 60;
    --background-saturation: 4%;
    --background-lightness: 95%;

    --foreground-hue: 0;
    --foreground-saturation: 5%;
    --foreground-lightness: 15%;

    /* set your opacity here for light-mode */
    --color-opacity-muted: 0.6;

    --background: hsl(
      var(--background-hue),
      var(--background-saturation),
      var(--background-lightness)
    );
    --foreground: hsl(
      var(--foreground-hue),
      var(--foreground-saturation),
      var(--foreground-lightness)
    );
    --muted: hsla(
      var(--background-hue),
      var(--background-saturation),
      var(--background-lightness),
      var(--color-opacity-muted)
    );
    --muted-foreground: hsla(
      var(--foreground-hue),
      var(--foreground-saturation),
      var(--foreground-lightness),
      var(--color-opacity-muted)
    );
    --destructive: hsl(0, 70%, 50%);
    --destructive-foreground: var(--foreground);
    --code: hsl(0, 0%, 15%);
    --code-foreground: hsl(0, 0%, 95%);
  }

  .dark {
    /* set your colors here for dark-mode */
    --background-hue: 0;
    --background-saturation: 5%;
    --background-lightness: 15%;

    --foreground-hue: 60;
    --foreground-saturation: 4%;
    --foreground-lightness: 95%;

    /* set your opacity here for dark-mode */
    --color-opacity-muted: 0.6;

    --background: hsl(
      var(--background-hue),
      var(--background-saturation),
      var(--background-lightness)
    );
    --foreground: hsl(
      var(--foreground-hue),
      var(--foreground-saturation),
      var(--foreground-lightness)
    );
    --muted: hsla(
      var(--background-hue),
      var(--background-saturation),
      var(--background-lightness),
      var(--color-opacity-muted)
    );
    --muted-foreground: hsla(
      var(--foreground-hue),
      var(--foreground-saturation),
      var(--foreground-lightness),
      var(--color-opacity-muted)
    );
    --destructive: hsl(0, 70%, 50%);
    --destructive-foreground: var(--foreground);
    --code: hsl(0, 0%, 95%);
    --code-foreground: hsl(0, 0%, 15%);
  }
  html {
    padding-left: calc(
      100vw - 100%
    ); /* Prevent horizontal scrollbar making the page jumnp */
  }
  a {
    @apply text-foreground hover:text-muted-foreground;
  }

  h1 {
    @apply text-4xl my-2;
  }

  h2 {
    @apply text-2xl my-1;
  }
  h3 {
    @apply text-xl my-1;
  }
  #toggle-theme-btn {
    @apply hover:opacity-60; /* maching the anchortag's 'text-muted-foreground' */
  }
  pre:has(> code) {
    @apply size-fit/*  my-2 p-2 font-mono rounded-sm bg-muted-foreground text-background */;
  }
}

@layer utilities {
  .min-max-w {
    max-width: 768px;
    min-width: 768px;
  }
  .scrollbar-padding {
    --scrollbar-width: 0px;
    --scrollbar-padding: 0px;
  }
}
